version: '3.9' # optional since v1.27.0
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.4
    container_name: ${COMPOSE_PROJECT_NAME}_traefik
    restart: always
    # Enables the web UI and tells Traefik to listen to docker
    command:
      #- "--api=true"
      #- "--api.dashboard=true"
      - '--providers.file.directory=/etc/traefik/dynamic_conf/'
      - '--log.level=ERROR'
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'
      - '--entrypoints.web.http.redirections.entrypoint.permanent=true'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.myresolver.acme.httpchallenge=true'
      - '--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web'
      - '--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}'
      - '--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json'
    ports:
      # The HTTP port
      - '80:80'
      - '443:443'
      # The Web UI (enabled by --api.insecure=true)
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      vpcbr:

  mongo:
    image: mongo
    container_name: ${COMPOSE_PROJECT_NAME}_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: toor
    volumes:
      - ../apps/mongo:/data/db
      - ../setup/mongo:/backup
    networks:
      vpcbr:

  # mongo-express:
  #   image: mongo-express
  #   container_name: ${COMPOSE_PROJECT_NAME}_dbfrontend
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: toor
  #     ME_CONFIG_MONGODB_URL: mongodb://root:toor@mongo:27017/
  #   networks:
  #     vpcbr:
  #       ipv4_address: 10.170.1.4
  #   labels:
  #     - traefik.http.routers.${COMPOSE_PROJECT_NAME}_dbfrontend.tls=true
  #     - traefik.http.routers.${COMPOSE_PROJECT_NAME}_dbfrontend.entrypoints=websecure
  #     - traefik.http.routers.${COMPOSE_PROJECT_NAME}_dbfrontend.tls.certresolver=myresolver
  #     - traefik.http.routers.${COMPOSE_PROJECT_NAME}_dbfrontend.rule=Host(db.${COMPOSE_URL})

  node:
    image: node:hydrogen-slim
    mem_limit: 2G
    working_dir: /home/node
    command: sh -c 'yarn && node .'
    restart: always
    volumes:
      - ../apps/node:/home/node
    networks:
      vpcbr:
    labels:
      - traefik.http.services.node.loadbalancer.server.port=3000
      - traefik.http.routers.node.tls=true
      - traefik.http.routers.node.entrypoints=websecure
      - traefik.http.routers.node.tls.certresolver=myresolver
      - traefik.http.routers.node.rule=Host(api.${COMPOSE_URL})

  auth:
    image: node:hydrogen-slim
    mem_limit: 2G
    working_dir: /home/node
    command: sh -c 'yarn && yarn startAuth'
    restart: always
    volumes:
      - ../apps/node:/home/node
    networks:
      vpcbr:
    labels:
      - traefik.http.services.auth.loadbalancer.server.port=4000
      - traefik.http.routers.auth.tls=true
      - traefik.http.routers.auth.entrypoints=websecure
      - traefik.http.routers.auth.tls.certresolver=myresolver
      - traefik.http.routers.auth.rule=Host(auth.${COMPOSE_URL})

  www:
    image: nginx:1.20.1-alpine
    hostname: www
    container_name: ${COMPOSE_PROJECT_NAME}_www
    restart: always
    volumes:
      - ../apps/www/dist:/usr/share/nginx/html
      - ../setup/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      vpcbr:
    labels:
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.tls=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.entrypoints=websecure
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.tls.certresolver=myresolver
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}_www.rule=Host(meine.${COMPOSE_URL},${COMPOSE_URL})

  webnode:
    image: node:hydrogen-slim
    container_name: ${COMPOSE_PROJECT_NAME}_webnode
    restart: always
    mem_limit: 2G
    working_dir: /home/node/www
    command: sh -c 'tail -f /dev/null'
    volumes:
      - ../apps/www:/home/node/www

networks:
  vpcbr:
    driver: bridge
    ipam:
      config:
        - subnet: 10.170.1.0/24
          gateway: 10.170.1.1
